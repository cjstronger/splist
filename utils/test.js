ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    maxRequestsOnConnectionReached: false,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    strictContentLength: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    _closed: false,
    _header: null,
    _keepAliveTimeout: 5000,
    _onPendingData: [Function: bound updateOutgoingData],
    req: IncomingMessage {
      _events: {
        close: undefined,
        error: undefined,
        data: undefined,
        end: undefined,
        readable: undefined
      },
      _readableState: ReadableState {
        highWaterMark: 16384,
        buffer: [],
        bufferIndex: 0,
        length: 0,
        pipes: [],
        awaitDrainWriters: null,
        [Symbol(kState)]: 1315084
      },
      _maxListeners: undefined,
      socket: Socket {
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: null,
        _closeAfterHandlingError: false,
        _events: [Object],
        _readableState: [ReadableState],
        _writableState: [WritableState],
        allowHalfOpen: true,
        _maxListeners: undefined,
        _eventsCount: 8,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Server],
        _server: [Server],
        parser: [HTTPParser],
        on: [Function: socketListenerWrap],
        addListener: [Function: socketListenerWrap],
        prependListener: [Function: socketListenerWrap],
        setEncoding: [Function: socketSetEncoding],
        _paused: false,
        _httpMessage: [Circular *1],
        [Symbol(async_id_symbol)]: 95,
        [Symbol(kHandle)]: [TCP],
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(shapeMode)]: true,
        [Symbol(kCapture)]: false,
        [Symbol(kSetNoDelay)]: true,
        [Symbol(kSetKeepAlive)]: false,
        [Symbol(kSetKeepAliveInitialDelay)]: 0,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0
      },
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: false,
      rawHeaders: [
        'Host',
        'localhost:3000',
        'Connection',
        'keep-alive',
        'Cache-Control',
        'max-age=0',
        'sec-ch-ua',
        '"Chromium";v="128", "Not;A=Brand";v="24", "Google Chrome";v="128"',
        'sec-ch-ua-mobile',
        '?0',
        'sec-ch-ua-platform',
        '"Windows"',
        'Upgrade-Insecure-Requests',
        '1',
        'User-Agent',
        'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/128.0.0.0 Safari/537.36',
        'Accept',
        'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',  
        'Sec-Fetch-Site',
        'none',
        'Sec-Fetch-Mode',
        'navigate',
        'Sec-Fetch-User',
        '?1',
        'Sec-Fetch-Dest',
        'document',
        'Accept-Encoding',
        'gzip, deflate, br, zstd',
        'Accept-Language',
        'en-US,en;q=0.9',
        'Cookie',
        'sb-nzszzpxpduixjugtfdla-auth-token-code-verifier=base64-IjEzYzEyN2NhMzU4ZTQyNWQ5YzQ5MGEyMDIwMzhhNDkyYTU5ZGY4YTAwNTY0NTk4ZDljODEwNTc5MmI3MzYwM2FhMzk4ZWRjYWFkZjU2NjM3NjA0ZTE5OGEyODRjMTZhOWQyNTJiZDllNWFhYjM2N2Ii; state=MSgzGdJFXlcqWwM5'
      ],
      rawTrailers: [],
      joinDuplicateHeaders: null,
      aborted: false,
      upgrade: false,
      url: '/callback?code=AQC5ubJY4FXfyZD5uTzst0KQd3mJxxJVpKWzTGFAllAMNOu5yO5Uq50oc-zratoH0G8K8fGUS5zAzf9Yf_6retLuVbkejrkeIGY7utBzfX6Jras4PAWkCrU-ZzNZfZKHFMAFhUoLC0z_7vy4VdwctYQNaLEg2-tUIOnXIq9IMTEq0WJ8TUwxr-cZLfZuTMtqz6UMkAlu3PXSUBLt84SSTEmkovYfyIMv6vnXo6NtQw&state=MSgzGdJFXlcqWwM5',        
      method: 'GET',
      statusCode: null,
      statusMessage: null,
      client: Socket {
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: null,
        _closeAfterHandlingError: false,
        _events: [Object],
        _readableState: [ReadableState],
        _writableState: [WritableState],
        allowHalfOpen: true,
        _maxListeners: undefined,
        _eventsCount: 8,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Server],
        _server: [Server],
        parser: [HTTPParser],
        on: [Function: socketListenerWrap],
        addListener: [Function: socketListenerWrap],
        prependListener: [Function: socketListenerWrap],
        setEncoding: [Function: socketSetEncoding],
        _paused: false,
        _httpMessage: [Circular *1],
        [Symbol(async_id_symbol)]: 95,
        [Symbol(kHandle)]: [TCP],
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(shapeMode)]: true,
        [Symbol(kCapture)]: false,
        [Symbol(kSetNoDelay)]: true,
        [Symbol(kSetKeepAlive)]: false,
        [Symbol(kSetKeepAliveInitialDelay)]: 0,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0
      },
      _consuming: false,
      _dumped: false,
      next: [Function: next],
      baseUrl: '/api/auth',
      originalUrl: '/api/auth/callback?code=AQC5ubJY4FXfyZD5uTzst0KQd3mJxxJVpKWzTGFAllAMNOu5yO5Uq50oc-zratoH0G8K8fGUS5zAzf9Yf_6retLuVbkejrkeIGY7utBzfX6Jras4PAWkCrU-ZzNZfZKHFMAFhUoLC0z_7vy4VdwctYQNaLEg2-tUIOnXIq9IMTEq0WJ8TUwxr-cZLfZuTMtqz6UMkAlu3PXSUBLt84SSTEmkovYfyIMv6vnXo6NtQw&state=MSgzGdJFXlcqWwM5',
      _parsedUrl: Url {
        protocol: null,
        slashes: null,
        auth: null,
        host: null,
        port: null,
        hostname: null,
        hash: null,
        search: '?code=AQC5ubJY4FXfyZD5uTzst0KQd3mJxxJVpKWzTGFAllAMNOu5yO5Uq50oc-zratoH0G8K8fGUS5zAzf9Yf_6retLuVbkejrkeIGY7utBzfX6Jras4PAWkCrU-ZzNZfZKHFMAFhUoLC0z_7vy4VdwctYQNaLEg2-tUIOnXIq9IMTEq0WJ8TUwxr-cZLfZuTMtqz6UMkAlu3PXSUBLt84SSTEmkovYfyIMv6vnXo6NtQw&state=MSgzGdJFXlcqWwM5',
        query: 'code=AQC5ubJY4FXfyZD5uTzst0KQd3mJxxJVpKWzTGFAllAMNOu5yO5Uq50oc-zratoH0G8K8fGUS5zAzf9Yf_6retLuVbkejrkeIGY7utBzfX6Jras4PAWkCrU-ZzNZfZKHFMAFhUoLC0z_7vy4VdwctYQNaLEg2-tUIOnXIq9IMTEq0WJ8TUwxr-cZLfZuTMtqz6UMkAlu3PXSUBLt84SSTEmkovYfyIMv6vnXo6NtQw&state=MSgzGdJFXlcqWwM5',
        pathname: '/callback',
        path: '/callback?code=AQC5ubJY4FXfyZD5uTzst0KQd3mJxxJVpKWzTGFAllAMNOu5yO5Uq50oc-zratoH0G8K8fGUS5zAzf9Yf_6retLuVbkejrkeIGY7utBzfX6Jras4PAWkCrU-ZzNZfZKHFMAFhUoLC0z_7vy4VdwctYQNaLEg2-tUIOnXIq9IMTEq0WJ8TUwxr-cZLfZuTMtqz6UMkAlu3PXSUBLt84SSTEmkovYfyIMv6vnXo6NtQw&state=MSgzGdJFXlcqWwM5',     
        href: '/callback?code=AQC5ubJY4FXfyZD5uTzst0KQd3mJxxJVpKWzTGFAllAMNOu5yO5Uq50oc-zratoH0G8K8fGUS5zAzf9Yf_6retLuVbkejrkeIGY7utBzfX6Jras4PAWkCrU-ZzNZfZKHFMAFhUoLC0z_7vy4VdwctYQNaLEg2-tUIOnXIq9IMTEq0WJ8TUwxr-cZLfZuTMtqz6UMkAlu3PXSUBLt84SSTEmkovYfyIMv6vnXo6NtQw&state=MSgzGdJFXlcqWwM5',     
        _raw: '/callback?code=AQC5ubJY4FXfyZD5uTzst0KQd3mJxxJVpKWzTGFAllAMNOu5yO5Uq50oc-zratoH0G8K8fGUS5zAzf9Yf_6retLuVbkejrkeIGY7utBzfX6Jras4PAWkCrU-ZzNZfZKHFMAFhUoLC0z_7vy4VdwctYQNaLEg2-tUIOnXIq9IMTEq0WJ8TUwxr-cZLfZuTMtqz6UMkAlu3PXSUBLt84SSTEmkovYfyIMv6vnXo6NtQw&state=MSgzGdJFXlcqWwM5'      
      },
      params: {},
      query: {
        code: 'AQC5ubJY4FXfyZD5uTzst0KQd3mJxxJVpKWzTGFAllAMNOu5yO5Uq50oc-zratoH0G8K8fGUS5zAzf9Yf_6retLuVbkejrkeIGY7utBzfX6Jras4PAWkCrU-ZzNZfZKHFMAFhUoLC0z_7vy4VdwctYQNaLEg2-tUIOnXIq9IMTEq0WJ8TUwxr-cZLfZuTMtqz6UMkAlu3PXSUBLt84SSTEmkovYfyIMv6vnXo6NtQw',
        state: 'MSgzGdJFXlcqWwM5'
      },
      res: [Circular *1],
      body: {},
      route: Route { path: '/callback', stack: [Array], methods: [Object] },
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: {
        host: 'localhost:3000',
        connection: 'keep-alive',
        'cache-control': 'max-age=0',
        'sec-ch-ua': '"Chromium";v="128", "Not;A=Brand";v="24", "Google Chrome";v="128"',
        'sec-ch-ua-mobile': '?0',
        'sec-ch-ua-platform': '"Windows"',
        'upgrade-insecure-requests': '1',
        'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/128.0.0.0 Safari/537.36',
        accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',
        'sec-fetch-site': 'none',
        'sec-fetch-mode': 'navigate',
        'sec-fetch-user': '?1',
        'sec-fetch-dest': 'document',
        'accept-encoding': 'gzip, deflate, br, zstd',
        'accept-language': 'en-US,en;q=0.9',
        cookie: 'sb-nzszzpxpduixjugtfdla-auth-token-code-verifier=base64-IjEzYzEyN2NhMzU4ZTQyNWQ5YzQ5MGEyMDIwMzhhNDkyYTU5ZGY4YTAwNTY0NTk4ZDljODEwNTc5MmI3MzYwM2FhMzk4ZWRjYWFkZjU2NjM3NjA0ZTE5OGEyODRjMTZhOWQyNTJiZDllNWFhYjM2N2Ii; state=MSgzGdJFXlcqWwM5'
      },
      [Symbol(kHeadersCount)]: 32,
      [Symbol(kTrailers)]: null,
      [Symbol(kTrailersCount)]: 0
    },
    _sent100: false,
    _expect_continue: false,
    _maxRequestsPerSocket: 0,
    locals: [Object: null prototype] {},
    [Symbol(shapeMode)]: false,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kChunkedBuffer)]: [],
    [Symbol(kChunkedLength)]: 0,
    [Symbol(kSocket)]: <ref *2> Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _events: {
        close: [Array],
        error: [Function: socketOnError],
        prefinish: undefined,
        finish: undefined,
        drain: [Function: bound socketOnDrain],
        data: [Function: bound socketOnData],
        end: [Array],
        readable: undefined,
        timeout: [Function: socketOnTimeout],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause]
      },
      _readableState: ReadableState {
        highWaterMark: 16384,
        buffer: [],
        bufferIndex: 0,
        length: 0,
        pipes: [],
        awaitDrainWriters: null,
        [Symbol(kState)]: 193997060
      },
      _writableState: WritableState {
        highWaterMark: 16384,
        length: 0,
        corked: 0,
        onwrite: [Function: bound onwrite],
        writelen: 0,
        bufferedIndex: 0,
        pendingcb: 0,
        [Symbol(kState)]: 17564420,
        [Symbol(kBufferedValue)]: null
      },
      allowHalfOpen: true,
      _maxListeners: undefined,
      _eventsCount: 8,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: Server {
        maxHeaderSize: undefined,
        insecureHTTPParser: undefined,
        requestTimeout: 300000,
        headersTimeout: 60000,
        keepAliveTimeout: 5000,
        connectionsCheckingInterval: 30000,
        requireHostHeader: true,
        joinDuplicateHeaders: undefined,
        rejectNonStandardBodyWrites: false,
        _events: [Object: null prototype],
        _eventsCount: 3,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        noDelay: true,
        keepAlive: false,
        keepAliveInitialDelay: 0,
        highWaterMark: 16384,
        httpAllowHalfOpen: false,
        timeout: 0,
        maxHeadersCount: null,
        maxRequestsPerSocket: 0,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Function: IncomingMessage],
        [Symbol(ServerResponse)]: [Function: ServerResponse],
        [Symbol(shapeMode)]: false,
        [Symbol(kCapture)]: false,
        [Symbol(async_id_symbol)]: 16,
        [Symbol(kUniqueHeaders)]: null,
        [Symbol(http.server.connections)]: ConnectionsList {},
        [Symbol(http.server.connectionsCheckingInterval)]: Timeout {
          _idleTimeout: 30000,
          _idlePrev: [TimersList],
          _idleNext: [TimersList],
          _idleStart: 563,
          _onTimeout: [Function: bound checkConnections],
          _timerArgs: undefined,
          _repeat: 30000,
          _destroyed: false,
          [Symbol(refed)]: false,
          [Symbol(kHasPrimitive)]: false,
          [Symbol(asyncId)]: 18,
          [Symbol(triggerId)]: 17
        }
      },
      _server: Server {
        maxHeaderSize: undefined,
        insecureHTTPParser: undefined,
        requestTimeout: 300000,
        headersTimeout: 60000,
        keepAliveTimeout: 5000,
        connectionsCheckingInterval: 30000,
        requireHostHeader: true,
        joinDuplicateHeaders: undefined,
        rejectNonStandardBodyWrites: false,
        _events: [Object: null prototype],
        _eventsCount: 3,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        noDelay: true,
        keepAlive: false,
        keepAliveInitialDelay: 0,
        highWaterMark: 16384,
        httpAllowHalfOpen: false,
        timeout: 0,
        maxHeadersCount: null,
        maxRequestsPerSocket: 0,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Function: IncomingMessage],
        [Symbol(ServerResponse)]: [Function: ServerResponse],
        [Symbol(shapeMode)]: false,
        [Symbol(kCapture)]: false,
        [Symbol(async_id_symbol)]: 16,
        [Symbol(kUniqueHeaders)]: null,
        [Symbol(http.server.connections)]: ConnectionsList {},
        [Symbol(http.server.connectionsCheckingInterval)]: Timeout {
          _idleTimeout: 30000,
          _idlePrev: [TimersList],
          _idleNext: [TimersList],
          _idleStart: 563,
          _onTimeout: [Function: bound checkConnections],
          _timerArgs: undefined,
          _repeat: 30000,
          _destroyed: false,
          [Symbol(refed)]: false,
          [Symbol(kHasPrimitive)]: false,
          [Symbol(asyncId)]: 18,
          [Symbol(triggerId)]: 17
        }
      },
      parser: HTTPParser {
        '0': null,
        '1': [Function: parserOnHeaders],
        '2': [Function: parserOnHeadersComplete],
        '3': [Function: parserOnBody],
        '4': [Function: parserOnMessageComplete],
        '5': [Function: bound onParserExecute],
        '6': [Function: bound onParserTimeout],
        _headers: [],
        _url: '',
        socket: [Circular *2],
        incoming: [IncomingMessage],
        outgoing: null,
        maxHeaderPairs: 2000,
        _consumed: true,
        onIncoming: [Function: bound parserOnIncoming],
        joinDuplicateHeaders: null,
        [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
      },
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: [Circular *1],
      [Symbol(async_id_symbol)]: 95,
      [Symbol(kHandle)]: TCP {
        reading: true,
        onconnection: null,
        _consumed: true,
        [Symbol(owner_symbol)]: [Circular *2]
      },
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: true,
      [Symbol(kSetKeepAlive)]: false,
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [ 'X-Powered-By', 'Express' ]
    },
    [Symbol(errored)]: null,
    [Symbol(kHighWaterMark)]: 16384,
    [Symbol(kRejectNonStandardBodyWrites)]: false,
    [Symbol(kUniqueHeaders)]: null
  }